% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/monocle_sparse_prcomp_irlba.R
\name{monocle_sparse_prcomp_irlba}
\alias{monocle_sparse_prcomp_irlba}
\title{Sparse prcomp irlba implemented in Monocle 3 alpha}
\usage{
monocle_sparse_prcomp_irlba(x, n = 3, retx = TRUE, center = TRUE,
  scale. = FALSE, ...)
}
\arguments{
\item{x}{a numeric or complex matrix (or data frame) which provides
the data for the principal components analysis.}

\item{n}{integer number of principal component vectors to return, must be less than
\code{min(dim(x))}.}

\item{retx}{a logical value indicating whether the rotated variables should be returned.}

\item{center}{a logical value indicating whether the variables should be
shifted to be zero centered. Alternately, a centering vector of length
equal the number of columns of \code{x} can be supplied.}

\item{scale.}{a logical value indicating whether the variables should be
         scaled to have unit variance before the analysis takes place.
         The default is \code{FALSE} for consistency with S, but scaling is often advisable.
         Alternatively, a vector of length equal the number of columns of \code{x} can be supplied.

         The value of \code{scale} determines how column scaling is performed
         (after centering).  If \code{scale} is a numeric vector with length
         equal to the number of columns of \code{x}, then each column of \code{x} is
         divided by the corresponding value from \code{scale}.  If \code{scale} is
         \code{TRUE} then scaling is done by dividing the (centered) columns of
         \code{x} by their standard deviations if \code{center=TRUE}, and the
         root mean square otherwise.  If \code{scale} is \code{FALSE}, no scaling is done.
         See \code{\link{scale}} for more details.}

\item{...}{additional arguments passed to \code{\link{irlba}}.}
}
\description{
Efficient computation of a truncated principal components analysis of a given data matrix
using an implicitly restarted Lanczos method from the \code{\link{irlba}} package.The augmented implicitly restarted Lanczos bidiagonalization algorithm (IRLBA) finds a few 
approximate largest (or, optionally, smallest) singular values and corresponding singular vectors of a 
sparse or dense matrix using a method of Baglama and Reichel. It is a fast and memory-efficient way to 
compute a partial SVD.
}
